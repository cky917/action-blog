(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{222:function(r,n,e){"use strict";e.r(n);var o=e(4),s=Object(o.a)({},(function(){var r=this,n=r.$createElement,e=r._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[e("p",[r._v("工作中为了模块化，我们会采用less进行开发。所以充分了解less的使用方法可以使开发变得更加有效率。\n")]),r._v(" "),e("blockquote",[e("p",[r._v("LESS是一种动态样式语言，属于CSS预处理语言的一种，它使用类似CSS的语法，为CSS的赋予了动态语言的特性，如变量、继承、运算、函数等，更方便CSS的编写和维护。")])]),r._v(" "),e("blockquote",[e("p",[r._v("LESS可以在多种语言、环境中使用，包括浏览器端、桌面客户端、服务端。")])]),r._v(" "),e("p",[r._v("下面介绍一下less的用法（更详细内容见"),e("a",{attrs:{href:"http://www.1024i.com/demo/less/document.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("官方文档"),e("OutboundLink")],1),r._v("）：")]),r._v(" "),e("h4",{attrs:{id:"一、less注释："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、less注释："}},[r._v("#")]),r._v(" 一、LESS注释：")]),r._v(" "),e("ol",[e("li",[r._v("/* 注释内容 */")])]),r._v(" "),e("p",[r._v("这种注释方法编译后，注释内容会保留到css文件内容中。")]),r._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[r._v("//注释内容\n这种注释方法编译后，注释内容不会保留到css文件中。")])]),r._v(" "),e("h4",{attrs:{id:"二、变量："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、变量："}},[r._v("#")]),r._v(" 二、变量：")]),r._v(" "),e("p",[r._v("我们可以像js一样为css定义变量并重复使用它。\n语法：@变量名:值;\nLESS源码：")]),r._v(" "),e("pre",[e("code",[r._v("@color: #4D926F;\n\n#header {\n    color: @color;\n}\nh2 {\n    color: @color;\n}\n")])]),r._v(" "),e("p",[r._v("编译后的css:")]),r._v(" "),e("pre",[e("code",[r._v("#header {\n    color: #4D926F;\n}\nh2 {\n    color: #4D926F;\n}\n")])]),r._v(" "),e("h4",{attrs:{id:"三、混合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、混合"}},[r._v("#")]),r._v(" 三、混合")]),r._v(" "),e("p",[r._v("混合可以将一个定义好的class A轻松的引入到另一个class B中，从而简单实现class B继承class A中的所有属性。我们还可以"),e("strong",[r._v("带参数")]),r._v("地调用，就像使用函数一样。")]),r._v(" "),e("p",[r._v("LESS源码：")]),r._v(" "),e("pre",[e("code",[r._v(".rounded-corners (@radius: 5px) {//带了默认值，如果调用时未传参数，则默认此值\n    -webkit-border-radius: @radius;\n    -moz-border-radius: @radius;\n    -ms-border-radius: @radius;\n    -o-border-radius: @radius;\n    border-radius: @radius;\n}\n\n#header {\n    .rounded-corners;\n}\n#footer {\n    .rounded-corners(10px);//传了参数 改变了@radius的值\n}\n")])]),r._v(" "),e("p",[r._v("编译后的CSS：")]),r._v(" "),e("pre",[e("code",[r._v("#header {\n    -webkit-border-radius: 5px;\n    -moz-border-radius: 5px;\n    -ms-border-radius: 5px;\n    -o-border-radius: 5px;\n    border-radius: 5px;\n}\n#footer {\n    -webkit-border-radius: 10px;\n    -moz-border-radius: 10px;\n    -ms-border-radius: 10px;\n    -o-border-radius: 10px;\n    border-radius: 10px;\n}\n")])]),r._v(" "),e("h4",{attrs:{id:"嵌套"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#嵌套"}},[r._v("#")]),r._v(" 嵌套")]),r._v(" "),e("p",[r._v("我们可以在一个选择器中嵌套另一个选择器来实现继承，这样很大程度减少了代码量，并且代码看起来更加的清晰。")]),r._v(" "),e("p",[r._v("LESS源码：")]),r._v(" "),e("pre",[e("code",[r._v("#header {\n    h1 {\n        font-size: 26px;\n        font-weight: bold;\n    }\n    p {\n        font-size: 12px;\n        a {\n            text-decoration: none;\n            &:hover {\n                border-width: 1px\n            }\n        }\n    }\n}\n")])]),r._v(" "),e("p",[r._v("编译后的CSS：")]),r._v(" "),e("pre",[e("code",[r._v("#header h1 {\n    font-size: 26px;\n    font-weight: bold;\n}\n#header p {\n    font-size: 12px;\n}\n#header p a {\n    text-decoration: none;\n}\n#header p a:hover {\n    border-width: 1px;\n}\n")])]),r._v(" "),e("p",[r._v("但是我更建议定义类名来调用，不建议用标签或者多层嵌套。")])])}),[],!1,null,null,null);n.default=s.exports}}]);